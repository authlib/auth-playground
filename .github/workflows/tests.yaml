---
name: tests
on:
  push:
    branches:
      - main
      - '*.*.*'
  pull_request:
    branches:
      - main
      - '*.*.*'
jobs:
  tests:
    name: py${{ matrix.python }} unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - '3.13'
          - '3.12'
          - '3.11'
          - '3.10'
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install Python ${{ matrix.python }}
        run: uv python install ${{ matrix.python }}
      - name: Run tests
        run: |
          export TZ=UTC
          uv sync --all-extras
          uv run pytest

  minversions:
    name: minimum dependency versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install Python 3.10
        run: uv python install 3.10
      - name: Run tests
        run: |
          export TZ=UTC
          uv sync --all-extras --resolution=lowest-direct
          uv run pytest

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Run tests
        run: |
          export TZ=UTC
          uv sync --all-extras
          uv run prek run --all-files

  bundle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: |
          export TZ=UTC
          uv sync --group release --all-extras --no-dev
          uv run pyinstaller auth-playground.spec
          uv cache prune --ci

  docker:
    name: docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: auth-playground:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test Docker image
        run: |
          docker run -d --name test-app -p 4000:4000 \
            -e SECRET_KEY="test-secret-key-for-ci" \
            -e FLASK_DEBUG="False" \
            auth-playground:test

          timeout 30 sh -c 'until docker inspect --format="{{.State.Health.Status}}" test-app | grep -q "healthy"; do sleep 1; done' || {
            echo "Container failed to become healthy"
            docker logs test-app
            exit 1
          }

          curl -f http://localhost:4000/ || {
            echo "App failed to respond"
            docker logs test-app
            exit 1
          }

          docker stop test-app
          docker rm test-app
